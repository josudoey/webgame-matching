{"version":3,"file":"49292868f37c91b41858.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,+BAA+B;AACzC;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,kBAAkB;AAClB,WAAW;AACX;AACA;AACA;AACA;AACA,uBAAuB;AACvB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kBAAkB,2CAA2C;AAC7D;AACA;AACA,YAAY,oCAAoC;AAChD;AACA;AACA;AACA;AACA,gBAAgB,2BAA2B,oBAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,SAAS;AACT;AACA;AACA;AACA,cAAc,6CAA6C;AAC3D;AACA;AACA;AACA,kBAAkB,oCAAoC,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qCAAqC;AACrC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvHsD;AACR;AAC9C,iEAAe;AACf,QAAQ;AACR,iBAAiB;AACjB;AACA,aAAa;AACb,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,IAAI,uKAAqB;AACzB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;ACjHqD;;AAEtD,iEAAe;AACf,QAAQ;AACR,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,qBAAqB,UAAU;AAC/B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack:///../vue/pages/home/open-image/render.pug","webpack:///../vue/pages/home/render.pug","webpack:///../vue/pages/home/index.mjs","webpack:///../vue/pages/home/open-image/index.mjs"],"sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.id\n    ? _c(\n        \"div\",\n        { staticClass: \"d-inline-block\" },\n        [\n          _c(\"b-form-file\", {\n            staticStyle: { display: \"none\" },\n            attrs: {\n              id: _vm.id,\n              placeholder: \"請選擇檔案...\",\n              accept: \".jpg, .png\",\n              plain: \"\"\n            },\n            on: { change: _vm.parseFile }\n          }),\n          _c(\n            \"label\",\n            {\n              staticClass: \"btn btn-secondary btn-sm mb-0\",\n              attrs: { for: _vm.id }\n            },\n            [_c(\"b-icon-card-image\")],\n            1\n          )\n        ],\n        1\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"container-fluid px-0\",\n      on: {\n        paste: function($event) {\n          $event.preventDefault()\n          return _vm.onPaste.apply(null, arguments)\n        },\n        drop: function($event) {\n          $event.preventDefault()\n          return _vm.onDrop.apply(null, arguments)\n        },\n        dragover: function($event) {\n          $event.preventDefault()\n        }\n      }\n    },\n    [\n      _c(\"nav\", { staticClass: \"navbar navbar-dark bg-dark\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"navbar-brand d-flex\" },\n          [\n            _vm._v(\"翻翻樂\"),\n            _c(\n              \"open-image\",\n              { staticClass: \"mb-0\", on: { load: _vm.insert } },\n              [_vm._v(\"上傳\")]\n            ),\n            _vm.items.length\n              ? _c(\n                  \"div\",\n                  {\n                    staticClass: \"btn btn-primary btn-sm\",\n                    on: { click: _vm.reset }\n                  },\n                  [_vm._v(\"重置\")]\n                )\n              : _vm._e()\n          ],\n          1\n        )\n      ]),\n      _c(\n        \"div\",\n        {\n          staticClass:\n            \"container-fluid px-0 d-flex flex-wrap justify-content-around align-items-center\",\n          staticStyle: { \"min-height\": \"calc(100vh - 60px)\" }\n        },\n        _vm._l(_vm.items, function(item, index) {\n          return _c(\n            \"div\",\n            { key: item.no, staticClass: \"game-card mt-2\" },\n            [\n              _c(\n                \"transition\",\n                { staticClass: \"d-relative\", attrs: { name: \"flip\" } },\n                [\n                  item.flipped\n                    ? _c(\n                        \"div\",\n                        {\n                          key: \"front\",\n                          staticClass:\n                            \"card pb-0 d-absolute game-card justify-content-around align-items-center\",\n                          on: {\n                            click: function($event) {\n                              return _vm.choice(item)\n                            }\n                          }\n                        },\n                        [\n                          _c(\"img\", {\n                            staticClass: \"mw-100 mh-100\",\n                            attrs: { src: item.src }\n                          })\n                        ]\n                      )\n                    : _c(\n                        \"div\",\n                        {\n                          key: \"back\",\n                          staticClass: \"card p-0 d-absolute btn\",\n                          attrs: { src: item.src },\n                          on: {\n                            click: function($event) {\n                              return _vm.choice(item)\n                            }\n                          }\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            {\n                              staticClass:\n                                \"w-100 game-card jumbotron text-center mb-0 d-flex justify-content-around align-items-center h1\"\n                            },\n                            [_vm._v(_vm._s(item.no))]\n                          )\n                        ]\n                      )\n                ]\n              )\n            ],\n            1\n          )\n        }),\n        0\n      )\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from './render.pug'\nimport OpenImage from './open-image/index.mjs'\nexport default {\n  render,\n  staticRenderFns,\n  components: {\n    OpenImage\n  },\n  data: () => {\n    return {\n      first: null,\n      second: null,\n      items: []\n    }\n  },\n  mounted () {\n    import('./style.css')\n  },\n  methods: {\n    onPaste (e) {\n      // console.log('on paste', e.clipboardData)\n      const files = [...e.clipboardData.files]\n      files.forEach((file) => {\n        this.parseImg(file)\n      })\n    },\n    onDrop (e) {\n      // console.log('on drop', e.dataTransfer)\n      const files = [...e.dataTransfer.files]\n      files.forEach((file) => {\n        this.parseImg(file)\n      })\n    },\n    parseImg: function (file) {\n      const self = this\n      const reader = new window.FileReader()\n      reader.addEventListener('load', function () {\n        const url = reader.result\n        const img = new window.Image()\n        img.onload = function () {\n          self.insert(img)\n        }\n        img.src = url\n      }, false)\n\n      if (!file) {\n        return\n      }\n      reader.readAsDataURL(file)\n    },\n    insert (img) {\n      if (!img) {\n        return\n      }\n      const id = this.items.length / 2\n      for (let i = 0; i < 2; i++) {\n        this.items.push({\n          id: id,\n          flipped: false,\n          src: img.src\n        })\n      }\n      this.reset()\n    },\n    choice (item) {\n      if (this.second) {\n        this.first.flipped = false\n        this.second.flipped = false\n        Object.assign(this, {\n          first: null,\n          second: null\n        })\n        return\n      }\n\n      if (item.flipped) {\n        return\n      }\n      const { first } = this\n      item.flipped = true\n      if (!first) {\n        this.first = item\n        return\n      }\n      if (item.id !== first.id) {\n        this.second = item\n        return\n      }\n      this.first = null\n    },\n    reset () {\n      const items = this.items\n      const len = items.length\n      for (let i = 0; i < len; i++) {\n        for (let j = i + 1; j < len; j++) {\n          const r = parseInt(Math.random() * len)\n          const a = items[r]\n          items[r] = items[i]\n          items[i] = a\n        }\n      }\n\n      Object.assign(this, {\n        first: null,\n        second: null\n      })\n\n      for (let i = 0; i < len; i++) {\n        items[i].no = i + 1\n        items[i].flipped = false\n      }\n    }\n  }\n}\n","import { render, staticRenderFns } from './render.pug'\n\nexport default {\n  render,\n  staticRenderFns,\n  props: [],\n  data: function () {\n    return {\n      id: ''\n    }\n  },\n  mounted: function () {\n    this.id = `img-${this._uid}`\n  },\n  methods: {\n    parseFile: function (e) {\n      const self = this\n      const input = e.srcElement\n      const file = input.files[0]\n      input.value = ''\n      const reader = new window.FileReader()\n      reader.addEventListener('load', function () {\n        const url = reader.result\n        const img = new window.Image()\n        img.onload = function () {\n          const { width, height } = this\n          Object.assign(self, {\n            width: width,\n            height: height,\n            url: url\n          })\n          self.$emit('load', img, self)\n        }\n        img.src = url\n      }, false)\n\n      if (!file) {\n        return\n      }\n      reader.readAsDataURL(file)\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}